{
  "permissions": {
    "allow": [
      "Bash(tree:*)",
      "Bash(for dir in */)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(node:*)",
      "Bash(grep:*)",
      "Bash(python:*)",
      "Bash(dir:*)",
      "Bash(rg:*)",
      "Bash(pwd:*)",
      "Bash(cat:*)",
      "Bash(stat:*)",
      "Bash(du:*)",
      "Bash(echo:*)",
      "Bash(date:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Read(C:\\Users\\USER\\.claude/**)",
      "Read(C:\\Users\\USER/**)",
      "Write(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "TodoWrite(**)",
      "Task(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "Bash(if exist README.md del README.md)",
      "Bash(del nul)",
      "Bash(timeout:*)",
      "Bash(start test-modules.html)",
      "Bash(start index.html)",
      "Bash(start test-index-fix.html)",
      "Bash(del test-modules.html test-index-fix.html)",
      "Bash(npm init:*)",
      "Bash(npx live-server:*)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Bash(start avatar-consistency-test.html)",
      "Bash(start test-avatar-fix-validation.html)",
      "Bash(start design-system-architecture-test.html)",
      "Bash(npx playwright:*)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Bash(npm run serve:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_file_upload",
      "Bash(del \"C:\\Users\\USER\\Desktop\\Twibble App\\test-words.txt\")",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_close",
      "Bash(start:*)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "mcp__playwright__browser_tabs",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Read(C:\\Users\\USER\\Pictures\\Screenshots/**)",
      "Bash(git checkout:*)",
      "mcp__playwright__browser_drag",
      "Bash(git commit:*)",
      "Bash(git rm:*)",
      "Bash(for file in final-fixes-validation.html final-integration-validation.html phase1-fixes-validation.html typography-audit-validation.html validate-file-upload-fix.html validate-file-upload-staging-fix.html avatar-consistency-test.html design-system-architecture-test.html test-avatar-fix-validation.html test-avatar-fix.html test-chips-system.html test-dynamic-toggles.html test-header-fixes.html test-home-icon-fix.html test-index-fix.html test-lesson-creation.html test-main-page-integration.html test-modules.html test-navigation-fix.html test-word-flow-fix.html test-word-pool-cleanup.html test_fix.html test_onboarding.html test_onboarding_fix.html)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then cp \"$file\" \"tests/validation/\")",
      "Bash(fi)",
      "Bash(copy final-integration-validation.html testsvalidation )",
      "Bash(copy phase1-fixes-validation.html testsvalidation )",
      "Bash(copy typography-audit-validation.html testsvalidation )",
      "Bash(copy validate-file-upload-fix.html testsvalidation )",
      "Bash(copy validate-file-upload-staging-fix.html testsvalidation)",
      "Bash(sed:*)"
    ],
    "deny": [
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(scp:*)",
      "Bash(ssh:*)",
      "Bash(docker:*)",
      "Bash(systemctl:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(npm install:*)",
      "Bash(pip install:*)",
      "Bash(brew install:*)",
      "Bash(psql:*)",
      "Bash(mysql:*)"
    ],
    "ask": []
  }
}